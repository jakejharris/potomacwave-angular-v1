--You are an expert fluent Angular web developer. Your task is to design and develop modern, responsive, and visually appealing web applications.--

Your goal is to create intuitive and engaging user experiences by combining daisyUI's pre-built components with custom styling and functionality. Pay close attention to responsive design principles, ensuring that your applications adapt seamlessly to different screen sizes and devices.--

The user, Jake Harris, a Frontend Developer, Designer, and Entrepreneur, will frequently use you as an assistant in the middle of tasks. They may not outline the full task in detail every time, so it is important that you make appropriate assumptions and ask follow-up questions when necessary.

When asked a coding question, assume that the appropriate environment is already set up unless otherwise stated. If code is provided, always maintain the variable names and existing structure unless there is a fundamental issue or you are specifically asked to make changes.

Remember to apply DbC principles throughout the problem-solving process and when providing code solutions to ensure robust, reliable, and maintainable code.--

--Directory Map--

potomacwave-angular-v1/

    .angular/

        cache/

            18.0.6/

                potomacwave-angular-v1/

                vite/

                    deps/

    .vscode/

    public/

        images/

    src/

        app/

            contact/

            features/

            footer/

            header/

            hero/

            howitdone/

            shared/

                connect-button/

            team/

            testimonials/


--File Contents--


--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\angular.json"--:{"content":"{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "potomacwave-angular-v1": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:application",
          "options": {
            "outputPath": "dist/potomacwave-angular-v1",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss"
            ],
            "scripts": [],
            "server": "src/main.server.ts",
            "prerender": true,
            "ssr": {
              "entry": "server.ts"
            }
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kB",
                  "maximumError": "1MB"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kB",
                  "maximumError": "4kB"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "optimization": false,
              "extractLicenses": false,
              "sourceMap": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "buildTarget": "potomacwave-angular-v1:build:production"
            },
            "development": {
              "buildTarget": "potomacwave-angular-v1:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n"
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "src/styles.scss"
            ],
            "scripts": []
          }
        }
      }
    }
  }
}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\README.md"--:{"content":"# FedDataCheck Angular Recreation

This project is an Angular recreation of the FedDataCheck website, showcasing my ability to quickly adapt to new technologies and frameworks. As a React developer transitioning to Angular, this project demonstrates my skills in front-end development and my capacity to learn and apply new concepts efficiently.

## Project Overview

This Angular application recreates the main features and design of the FedDataCheck website, including:

- Home page with hero section
- Features overview
- Team member profiles
- FAQ section
- Contact form

The project utilizes Angular's component-based architecture and integrates with TypeScript for improved code quality and maintainability.

## Getting Started

### Prerequisites

- Node.js (v14 or later)
- npm (v6 or later)
- Angular CLI (`npm install -g @angular/cli`)

### Installation

1. Clone the repository:
git clone https://github.com/jakejharris/potomacwave-angular-v1.git

2. Navigate to the project directory:
cd potomacwave-angular-v1

3. Install the dependencies:
npm install

### Development server

Run `ng serve` for a dev server. Navigate to `http://localhost:4200/`. The application will automatically reload if you change any of the source files.

## Project Structure

The project follows Angular's standard directory structure:

- `src/app/components`: Contains individual components for each section of the website
- `src/app/services`: Includes any services for data management or API integrations
- `src/assets`: Stores static assets like images and icons

## Features Implemented

- Responsive design using Angular's built-in features and CSS
- Interactive elements such as the FAQ accordion and testimonial carousel
- Form handling for the contact section
- Integration of SVG icons and images

## Deployment

This project is set up for easy deployment to Vercel. You can deploy your own instance using the button below:

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https://github.com/jakejharris/potomacwave-angular-v1.git)

## Learning Resources

For those new to Angular, here are some helpful resources:

- [Angular Documentation](https://angular.io/docs)
- [Angular Tutorial](https://angular.io/tutorial)
- [Angular CLI Overview](https://angular.io/cli)

## Further Development

As this project is a recreation for demonstration purposes, there are several areas for potential enhancement:

- Implementing a backend API for the contact form
- Adding animations and transitions between sections
- Improving accessibility features
- Implementing unit and e2e tests

## Acknowledgements

This project is based on the design and content of the original FedDataCheck website. All rights and credits for the original design and content belong to FedDataCheck and PotomacWave Consulting."}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\server.ts"--:{"content":"import { APP_BASE_HREF } from '@angular/common';
import { CommonEngine } from '@angular/ssr';
import express from 'express';
import { fileURLToPath } from 'node:url';
import { dirname, join, resolve } from 'node:path';
import bootstrap from './src/main.server';

// The Express app is exported so that it can be used by serverless Functions.
export function app(): express.Express {
  const server = express();
  const serverDistFolder = dirname(fileURLToPath(import.meta.url));
  const browserDistFolder = resolve(serverDistFolder, '../browser');
  const indexHtml = join(serverDistFolder, 'index.server.html');

  const commonEngine = new CommonEngine();

  server.set('view engine', 'html');
  server.set('views', browserDistFolder);

  // Example Express Rest API endpoints
  // server.get('/api/**', (req, res) => { });
  // Serve static files from /browser
  server.get('**', express.static(browserDistFolder, {
    maxAge: '1y',
    index: 'index.html',
  }));

  // All regular routes use the Angular engine
  server.get('**', (req, res, next) => {
    const { protocol, originalUrl, baseUrl, headers } = req;

    commonEngine
      .render({
        bootstrap,
        documentFilePath: indexHtml,
        url: `${protocol}://${headers.host}${originalUrl}`,
        publicPath: browserDistFolder,
        providers: [{ provide: APP_BASE_HREF, useValue: baseUrl }],
      })
      .then((html) => res.send(html))
      .catch((err) => next(err));
  });

  return server;
}

function run(): void {
  const port = process.env['PORT'] || 4000;

  // Start up the Node server
  const server = app();
  server.listen(port, () => {
    console.log(`Node Express server listening on http://localhost:${port}`);
  });
}

run();
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\tsconfig.app.json"--:{"content":"/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */
/* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "./out-tsc/app",
    "types": [
      "node"
    ]
  },
  "files": [
    "src/main.ts",
    "src/main.server.ts",
    "server.ts"
  ],
  "include": [
    "src/**/*.d.ts"
  ]
}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\tsconfig.json"--:{"content":"/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */
/* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */
{
  "compileOnSave": false,
  "compilerOptions": {
    "outDir": "./dist/out-tsc",
    "strict": true,
    "noImplicitOverride": true,
    "noPropertyAccessFromIndexSignature": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "sourceMap": true,
    "declaration": false,
    "experimentalDecorators": true,
    "moduleResolution": "bundler",
    "importHelpers": true,
    "target": "ES2022",
    "module": "ES2022",
    "useDefineForClassFields": false,
    "lib": [
      "ES2022",
      "dom"
    ]
  },
  "angularCompilerOptions": {
    "enableI18nLegacyMessageIdFormat": false,
    "strictInjectionParameters": true,
    "strictInputAccessModifiers": true,
    "strictTemplates": true
  }
}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\tsconfig.spec.json"--:{"content":"/* To learn more about Typescript configuration file: https://www.typescriptlang.org/docs/handbook/tsconfig-json.html. */
/* To learn more about Angular compiler options: https://angular.dev/reference/configs/angular-compiler-options. */
{
  "extends": "./tsconfig.json",
  "compilerOptions": {
    "outDir": "./out-tsc/spec",
    "types": [
      "jasmine"
    ]
  },
  "include": [
    "src/**/*.spec.ts",
    "src/**/*.d.ts"
  ]
}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\.angular\cache\18.0.6\vite\deps\_metadata.json"--:{"content":"{
  "hash": "d395debd",
  "configHash": "66fc2e10",
  "lockfileHash": "b0442c0d",
  "browserHash": "aaf93520",
  "optimized": {
    "@angular/core": {
      "src": "../../../../../node_modules/@angular/core/fesm2022/core.mjs",
      "file": "@angular_core.js",
      "fileHash": "3d1810fe",
      "needsInterop": false
    },
    "@angular/platform-browser": {
      "src": "../../../../../node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs",
      "file": "@angular_platform-browser.js",
      "fileHash": "5107f7b1",
      "needsInterop": false
    },
    "@angular/router": {
      "src": "../../../../../node_modules/@angular/router/fesm2022/router.mjs",
      "file": "@angular_router.js",
      "fileHash": "33c1b26c",
      "needsInterop": false
    },
    "@angular/common": {
      "src": "../../../../../node_modules/@angular/common/fesm2022/common.mjs",
      "file": "@angular_common.js",
      "fileHash": "a5ebe59e",
      "needsInterop": false
    }
  },
  "chunks": {
    "chunk-22KN6ZJ6": {
      "file": "chunk-22KN6ZJ6.js"
    },
    "chunk-C6435UVC": {
      "file": "chunk-C6435UVC.js"
    },
    "chunk-BMYWVJG5": {
      "file": "chunk-BMYWVJG5.js"
    }
  }
}"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\.vscode\extensions.json"--:{"content":"{
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=827846
  "recommendations": ["angular.ng-template"]
}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\.vscode\launch.json"--:{"content":"{
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "name": "ng serve",
      "type": "chrome",
      "request": "launch",
      "preLaunchTask": "npm: start",
      "url": "http://localhost:4200/"
    },
    {
      "name": "ng test",
      "type": "chrome",
      "request": "launch",
      "preLaunchTask": "npm: test",
      "url": "http://localhost:9876/debug.html"
    }
  ]
}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\.vscode\tasks.json"--:{"content":"{
  // For more information, visit: https://go.microsoft.com/fwlink/?LinkId=733558
  "version": "2.0.0",
  "tasks": [
    {
      "type": "npm",
      "script": "start",
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "bundle generation complete"
          }
        }
      }
    },
    {
      "type": "npm",
      "script": "test",
      "isBackground": true,
      "problemMatcher": {
        "owner": "typescript",
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "(.*?)"
          },
          "endsPattern": {
            "regexp": "bundle generation complete"
          }
        }
      }
    }
  ]
}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\index.html"--:{"content":"<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>PotomacwaveAngularV1</title>
  <base href="/">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
</head>
<body>
  <app-root></app-root>
</body>
</html>
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\main.server.ts"--:{"content":"import { bootstrapApplication } from '@angular/platform-browser';
import { AppComponent } from './app/app.component';
import { config } from './app/app.config.server';

const bootstrap = () => bootstrapApplication(AppComponent, config);

export default bootstrap;
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\main.ts"--:{"content":"import { bootstrapApplication } from '@angular/platform-browser';
import { appConfig } from './app/app.config';
import { AppComponent } from './app/app.component';

bootstrapApplication(AppComponent, appConfig)
  .catch((err) => console.error(err));
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\styles.scss"--:{"content":"/* You can add global styles to this file, and also import other style files */
@tailwind base;
@tailwind components;
@tailwind utilities;"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\app.component.html"--:{"content":"<app-header />

<main class="w-full flex justify-center items-center flex-col">
  <app-hero></app-hero>
  <app-howitdone></app-howitdone>
  <app-features></app-features>
  <app-team></app-team>
  <app-testimonials></app-testimonials>
  <app-contact></app-contact>
</main>

<app-footer />"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\app.component.scss"--:{"content":""}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\app.component.spec.ts"--:{"content":"import { TestBed } from '@angular/core/testing';
import { AppComponent } from './app.component';

describe('AppComponent', () => {
  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [AppComponent],
    }).compileComponents();
  });

  it('should create the app', () => {
    const fixture = TestBed.createComponent(AppComponent);
    const app = fixture.componentInstance;
    expect(app).toBeTruthy();
  });

  it(`should have the 'potomacwave-angular-v1' title`, () => {
    const fixture = TestBed.createComponent(AppComponent);
    const app = fixture.componentInstance;
    expect(app.title).toEqual('potomacwave-angular-v1');
  });

  it('should render title', () => {
    const fixture = TestBed.createComponent(AppComponent);
    fixture.detectChanges();
    const compiled = fixture.nativeElement as HTMLElement;
    expect(compiled.querySelector('h1')?.textContent).toContain('Hello, potomacwave-angular-v1');
  });
});
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\app.component.ts"--:{"content":"import { Component } from '@angular/core';
import { RouterOutlet } from '@angular/router';
import { HeaderComponent } from "./header/header.component";
import { HeroComponent } from "./hero/hero.component";
import { HowitdoneComponent } from "./howitdone/howitdone.component";
import { FeaturesComponent } from "./features/features.component";
import { TeamComponent } from "./team/team.component";
import { TestimonialsComponent } from "./testimonials/testimonials.component";
import { ContactComponent } from "./contact/contact.component";
import { FooterComponent } from "./footer/footer.component";

@Component({
    selector: 'app-root',
    standalone: true,
    templateUrl: './app.component.html',
    styleUrl: './app.component.scss',
    imports: [RouterOutlet, HeaderComponent, HeroComponent, HowitdoneComponent, FeaturesComponent, TeamComponent, TestimonialsComponent, ContactComponent, FooterComponent]
})
export class AppComponent {
  title = 'potomacwave-angular-v1';
}

"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\app.config.server.ts"--:{"content":"import { mergeApplicationConfig, ApplicationConfig } from '@angular/core';
import { provideServerRendering } from '@angular/platform-server';
import { appConfig } from './app.config';

const serverConfig: ApplicationConfig = {
  providers: [
    provideServerRendering()
  ]
};

export const config = mergeApplicationConfig(appConfig, serverConfig);
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\app.config.ts"--:{"content":"import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';
import { provideRouter } from '@angular/router';

import { routes } from './app.routes';
import { provideClientHydration } from '@angular/platform-browser';

export const appConfig: ApplicationConfig = {
  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration()]
};
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\app.routes.ts"--:{"content":"import { Routes } from '@angular/router';

export const routes: Routes = [];
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\contact\contact.component.html"--:{"content":"<p>contact works!</p>
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\contact\contact.component.scss"--:{"content":""}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\contact\contact.component.spec.ts"--:{"content":"import { ComponentFixture, TestBed } from '@angular/core/testing';

import { ContactComponent } from './contact.component';

describe('ContactComponent', () => {
  let component: ContactComponent;
  let fixture: ComponentFixture<ContactComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [ContactComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(ContactComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\contact\contact.component.ts"--:{"content":"import { Component } from '@angular/core';

@Component({
  selector: 'app-contact',
  standalone: true,
  imports: [],
  templateUrl: './contact.component.html',
  styleUrl: './contact.component.scss'
})
export class ContactComponent {

}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\features\features.component.html"--:{"content":"<div class="flex flex-col w-full">
  <div class="flex flex-col mb-8">
    <h2 class="text-3xl font-bold mb-4">Power Features</h2>
    <p class="text-lg">
      FedDataCheck is a collaborative platform. We regularly build in the data quality insights from federal contracting experts, such as flagging awards that used a socioeconomic set-aside while referencing a GWAC, and we regularly add requested enhancements such as Service Contract Inventory reporting.
    </p>
  </div>

  <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-6">
    <div class="bg-white p-6 rounded-lg shadow-md">
      <h3 class="text-xl font-semibold mb-2">FPDS-NG data quality</h3>
      <p>FedDataCheck scans all new contract action reports daily looking for FAR violations and logical inconsistencies.</p>
    </div>
    <div class="bg-white p-6 rounded-lg shadow-md">
      <h3 class="text-xl font-semibold mb-2">Automating the V&V</h3>
      <p>Online form for collection of the Annual FPDS Verification & Validation Review audits as well as database-driven sample generation.</p>
    </div>
    <div class="bg-white p-6 rounded-lg shadow-md">
      <h3 class="text-xl font-semibold mb-2">Ad-hoc reporting</h3>
      <p>Excel-based reporting allowing for enhanced analytical flexibility.</p>
    </div>
    <div class="bg-white p-6 rounded-lg shadow-md">
      <h3 class="text-xl font-semibold mb-2">Data Act compliance</h3>
      <p>Graphical dashboard and web-based reports track your department's compliance with the DATA Act.</p>
    </div>
    <div class="bg-white p-6 rounded-lg shadow-md">
      <h3 class="text-xl font-semibold mb-2">Contractor Responsibility Assessment</h3>
      <p>Automatically generate a FAR 9.1 compliant assessment in about 90 seconds via a simple email request.</p>
    </div>
    <div class="bg-white p-6 rounded-lg shadow-md">
      <h3 class="text-xl font-semibold mb-2">Instant feedback</h3>
      <p>Automated email alerts regarding FPDS data quality, expiring one bids, not competed awards, transactions involving debarred vendors, and many more.</p>
    </div>
  </div>
</div>

<div class="flex flex-col mt-12">
  <h2 class="text-3xl font-bold mb-4">Our Subscribers</h2>
  <!-- TODO: Carousel -->
</div>
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\features\features.component.scss"--:{"content":""}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\features\features.component.spec.ts"--:{"content":"import { ComponentFixture, TestBed } from '@angular/core/testing';

import { FeaturesComponent } from './features.component';

describe('FeaturesComponent', () => {
  let component: FeaturesComponent;
  let fixture: ComponentFixture<FeaturesComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [FeaturesComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(FeaturesComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\features\features.component.ts"--:{"content":"import { Component } from '@angular/core';

@Component({
  selector: 'app-features',
  standalone: true,
  imports: [],
  templateUrl: './features.component.html',
  styleUrl: './features.component.scss'
})
export class FeaturesComponent {

}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\footer\footer.component.html"--:{"content":"<p>footer works!</p>
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\footer\footer.component.scss"--:{"content":""}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\footer\footer.component.spec.ts"--:{"content":"import { ComponentFixture, TestBed } from '@angular/core/testing';

import { FooterComponent } from './footer.component';

describe('FooterComponent', () => {
  let component: FooterComponent;
  let fixture: ComponentFixture<FooterComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [FooterComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(FooterComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\footer\footer.component.ts"--:{"content":"import { Component } from '@angular/core';

@Component({
  selector: 'app-footer',
  standalone: true,
  imports: [],
  templateUrl: './footer.component.html',
  styleUrl: './footer.component.scss'
})
export class FooterComponent {

}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\header\header.component.html"--:{"content":"<header class="bg-white shadow-md">
    <div class="navbar container mx-auto px-4 py-6">
        <div class="navbar-start">
            <a href="/" class="flex items-center">
                <img src="images/feddatachecklogo.jpg" alt="Company Logo" class="h-10 md:h-20 w-auto">
            </a>
        </div>
        <div class="navbar-end">
            <div class="dropdown dropdown-end">
                <label tabindex="0" class="btn btn-ghost lg:hidden">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
                        stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M4 6h16M4 12h8m-8 6h16" />
                    </svg>
                </label>
                <ul tabindex="0"
                    class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52 text-right border border-gray-200">
                    <li><a href="#features" class="text-gray-600 hover:text-gray-900 font-semibold">Features</a></li>
                    <li><a href="#cra" class="text-gray-600 hover:text-gray-900 font-semibold">CRA</a></li>
                    <li><a href="#team" class="text-gray-600 hover:text-gray-900 font-semibold">Team</a></li>
                    <li><a href="#faq" class="text-gray-600 hover:text-gray-900 font-semibold">FAQ</a></li>
                    <li><a href="#connect" class="text-gray-600 hover:text-gray-900 font-semibold">Connect</a></li>
                </ul>
            </div>
            <nav class="hidden lg:flex">
                <ul class="menu menu-horizontal px-1 gap-1">
                    <li><a href="#features" class="text-gray-600 hover:text-gray-900 font-semibold text-lg">Features</a>
                    </li>
                    <li><a href="#cra" class="text-gray-600 hover:text-gray-900 font-semibold text-lg">CRA</a></li>
                    <li><a href="#team" class="text-gray-600 hover:text-gray-900 font-semibold text-lg">Team</a></li>
                    <li><a href="#faq" class="text-gray-600 hover:text-gray-900 font-semibold text-lg">FAQ</a></li>
                    <li><a href="#connect" class="text-gray-600 hover:text-gray-900 font-semibold text-lg">Connect</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</header>"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\header\header.component.scss"--:{"content":""}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\header\header.component.spec.ts"--:{"content":"import { ComponentFixture, TestBed } from '@angular/core/testing';

import { HeaderComponent } from './header.component';

describe('HeaderComponent', () => {
  let component: HeaderComponent;
  let fixture: ComponentFixture<HeaderComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [HeaderComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(HeaderComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\header\header.component.ts"--:{"content":"import { Component } from '@angular/core';

@Component({
  selector: 'app-header',
  standalone: true,
  imports: [],
  templateUrl: './header.component.html',
  styleUrl: './header.component.scss'
})
export class HeaderComponent {

}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\hero\hero.component.html"--:{"content":"<div
    class="flex justify-center items-center w-full py-4 md:py-0 min-h-[90dvh] bg-gradient-to-b from-[#0054A3] to-[#89c6ff]">
    <div class="container mx-auto px-4 flex flex-col-reverse lg:flex-row gap-4 justify-between items-center">
        <!-- Left Column -->
        <div class="flex flex-col items-start text-left mb-8 lg:mb-0 w-full lg:w-1/2">
            <h1 class="text-4xl sm:text-5xl md:text-6xl font-bold mb-4 text-white w-full text-shadow-md">FEDDATACHECK</h1>
            <p class="text-xl md:text-2xl mb-6 text-gray-200 w-full font-semibold text-shadow-sm">Improving FAR compliance and procurement metrics
                through:</p>
            <ul class="mb-8 w-full">
                <li class="flex items-center mb-2">
                    <svg class="w-5 h-5 mr-2 text-gray-100" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-gray-200 font-medium text-shadow-sm">Business intelligence</span>
                </li>
                <li class="flex items-center mb-2">
                    <svg class="w-5 h-5 mr-2 text-gray-100" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-gray-200 font-medium text-shadow-sm">Automated email alerts</span>
                </li>
                <li class="flex items-center mb-2">
                    <svg class="w-5 h-5 mr-2 text-gray-100" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-gray-200 font-medium text-shadow-sm">Improved data quality</span>
                </li>
                <li class="flex items-center mb-2">
                    <svg class="w-5 h-5 mr-2 text-gray-100" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-gray-200 font-medium text-shadow-sm">Monthly progress reports</span>
                </li>
                <li class="flex items-center mb-2">
                    <svg class="w-5 h-5 mr-2 text-gray-100" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-gray-200 font-medium text-shadow-sm">Collaboration with thousands of federal procurement officials</span>
                </li>
            </ul>
            <app-connect-button></app-connect-button>
        </div>

        <!-- Right Column -->
        <div class="w-full lg:w-1/2 h-[200px] sm:h-[250px] md:h-[300px] lg:h-[400px]">
            <div class="aspect-w-16 aspect-h-9 h-full">
                <iframe class="w-full h-full rounded-lg shadow-lg"
                    src="https://www.youtube.com/embed/jPXhESFcOYk?controls=1&rel=0&playsinline=0&modestbranding=1&autoplay=0&enablejsapi=1&origin=https%3A%2F%2Ffeddatacheck.com&widgetid=7"
                    frameborder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                    allowfullscreen></iframe>
            </div>
        </div>
    </div>
</div>
<div class="flex min-h-[90dvh] relative overflow-hidden bg-gradient-to-b from-[#f8f8f8] to-[#fdfdfd] py-2">
    <div class="videoWrapper w-full h-full absolute pointer-events-none">
        <iframe class="w-full h-full object-cover absolute inset-0 mt-[-4rem] pb-4" frameborder="0" allowfullscreen
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
            referrerpolicy="strict-origin-when-cross-origin" title="FDC1 video 001"
            src="https://www.youtube-nocookie.com/embed/YlBNFeH8e80?modestbranding=1&showinfo=0&controls=0&rel=0&playsinline=1&enablejsapi=1&origin=https%3A%2F%2Ffeddatacheck.com&widgetid=1&autoplay=1&loop=1&playlist=YlBNFeH8e80&mute=1"
            id="backgroundVideo">
        </iframe>
    </div>

    <div class="pb-20 container mx-auto px-4 py-6 md:py-4 lg:py-0 flex flex-col lg:flex-row items-center justify-between relative gap-12 z-10">
        <div class="w-full lg:w-1/2 mb-8 lg:mb-0">
            <img src="images/resultspic.jpg" alt="FedDataCheck Results" class="w-full h-auto rounded-lg shadow-lg">
        </div>

        <div class="w-full lg:w-1/2 bg-gray-200 p-8 rounded-lg">
            <h2 class="text-2xl md:text-3xl font-bold mb-4">
                <span class="text-[#001B49]">What are </span>
                <span class="text-[#4891ce]">FedDataCheck's results?</span>
            </h2>
            <hr class="border-t-2 border-gray-300 mb-6 w-12">
            <ul class="space-y-4 font-medium">
                <li class="flex items-center">
                    <svg class="w-6 h-6 mr-2 text-green-500 flex-shrink-0" fill="none" stroke="currentColor"
                        viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-lg">FPDS-NG data quality rate of FedDataCheck subscribers is 93.9%. Rest of federal civilian
                        agencies, 88.2%</span>
                </li>
                <li class="flex items-center">
                    <svg class="w-6 h-6 mr-2 text-green-500 flex-shrink-0" fill="none" stroke="currentColor"
                        viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-lg">Billions of obligated dollars added (correctly) to the competed award column</span>
                </li>
                <li class="flex items-center">
                    <svg class="w-6 h-6 mr-2 text-green-500 flex-shrink-0" fill="none" stroke="currentColor"
                        viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-lg">Billions of obligated dollars removed (correctly) from the competitive one bid column</span>
                </li>
                <li class="flex items-center">
                    <svg class="w-6 h-6 mr-2 text-green-500 flex-shrink-0" fill="none" stroke="currentColor"
                        viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span class="text-lg">Transactions involving higher risk and debarred vendors under automated and close watch</span>
                </li>
            </ul>
            <app-connect-button additionalClasses="mt-6"></app-connect-button>
        </div>
    </div>
</div>"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\hero\hero.component.scss"--:{"content":".videoWrapper {
    padding-bottom: 56.25%;
    /* 16:9 */
    padding-top: 25px;
    height: 0;
}

.videoWrapper iframe {
    position: absolute;
    width: 100%;
    height: 100%;
}

@media (max-width: 1600px) {
    .videoWrapper iframe {
        width: 120%;
        height: 120%;
    }
}

@media (max-width: 1400px) {
    .videoWrapper iframe {
        width: 140%;
        height: 130%;
        margin-left:-10%;
    }
}

@media (max-width: 1200px) {
    .videoWrapper iframe {
        width: 140%;
        height: 130%;
        margin-left:-10%;
    }
}

@media (max-width: 1000px) {
    .videoWrapper iframe {
        width: 154%;
        height: 150%;
    }
}

@media (max-width: 800px) {
    .videoWrapper iframe {
        width: 170%;
        height: 150%;
        margin-left:-10%;
    }
}

@media (max-width: 600px) {
    .videoWrapper iframe {
        width: 170%;
        height: 150%;
        margin-left:-10%;
    }
}

@media (max-width: 400px) {
    .videoWrapper iframe {
        width: 170%;
        height: 154%;
    }
}"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\hero\hero.component.spec.ts"--:{"content":"import { ComponentFixture, TestBed } from '@angular/core/testing';

import { HeroComponent } from './hero.component';

describe('HeroComponent', () => {
  let component: HeroComponent;
  let fixture: ComponentFixture<HeroComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [HeroComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(HeroComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\hero\hero.component.ts"--:{"content":"import { Component, HostBinding } from '@angular/core';
import { ConnectButtonComponent } from '../shared/connect-button/connect-button.component';

@Component({
  selector: 'app-hero',
  standalone: true,
  imports: [ConnectButtonComponent],
  templateUrl: './hero.component.html',
  styleUrls: ['./hero.component.scss']
})
export class HeroComponent {
  @HostBinding('class') hostClass = 'w-full';
}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\howitdone\howitdone.component.html"--:{"content":"<div class="container mx-auto px-4">
  <!-- How is it done section -->
  <div class="pb-16 pt-0 md:pt-16">
    <div class="flex flex-col lg:flex-row justify-between gap-12">
      <div class="lg:w-1/2 mb-8 lg:mb-0">
        <h2 class="text-3xl font-bold !mb-8"><span class="text-[#001B49]">How is </span><span class="text-[#4891ce]">it
            done?</span></h2>
        <hr class="border-t-2 border-[#001B49] mt-4 mb-8 w-12">
        <div class="space-y-4 font-medium text-lg">
          <div class="flex items-center">
            <svg class="w-6 h-6 mr-2 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            Automated integration of FPDS, SAM, USAspending, and other federal procurement sources
          </div>
          <div class="flex items-center">
            <svg class="w-6 h-6 mr-2 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            Collaboration with thousands of federal contracting officials
          </div>
          <div class="flex items-center">
            <svg class="w-6 h-6 mr-2 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            Use of a web-based business intelligence system that has encoded the collective wisdom of dozens
            of senior acquisition oversight officials
          </div>
          <div class="flex items-center">
            <svg class="w-6 h-6 mr-2 text-green-500 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            Automated reports and alerts targeted and tailored towards a CO's own data input
          </div>
        </div>
        <app-connect-button additionalClasses="mt-6"></app-connect-button>
      </div>
      <div class="lg:w-1/3">
        <div class="carousel w-full" #carousel>
          <div class="carousel-item w-full" *ngFor="let slide of slides; let i = index">
            <img [src]="slide.image" [alt]="slide.alt" class="w-fuli">
          </div>
        </div>
        <div class="flex justify-center w-full py-2 gap-2">
          <button class="btn btn-xs" (click)="prevSlide()">❮</button>
          <span class="text-sm font-medium">{{ currentSlide + 1 }}/{{ slides.length }}</span>
          <button class="btn btn-xs" (click)="nextSlide()">❯</button>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Slanted divider -->
<div class="relative h-16">
  <svg class="absolute w-full h-16" preserveAspectRatio="none" viewBox="0 0 1440 48" fill="none"
    xmlns="http://www.w3.org/2000/svg">
    <path d="M0 48H1440V0L0 48Z" fill="#001b49" />
  </svg>
</div>

<!-- Contractor Responsibility Assessment Reporting section -->
<div class="bg-[#001b49] text-white">
  <div class="container mx-auto px-4 py-16">
    <div class="flex flex-col lg:flex-row items-center mb-12">
      <div class="lg:w-1/2 mb-4 lg:mb-0">
        <h2 class="text-3xl font-bold !mb-8">Contractor Responsibility Assessment Reporting</h2>
        <hr class="border-t-2 border-gray-300 my-4 w-12">
      </div>
      <div class="lg:w-1/2">
        <p class="font-medium text-lg">
          FedDataCheck uses Robotic Process Automation (RPA) to provide our customers with the information
          they need to get their job done – by providing detailed, on-demand customized reports that save our customer's
          time. Currently three of FedDataCheck's most popular reports are available on-demand through RPA are:
        </p>
      </div>
    </div>
    <div class="flex flex-col lg:flex-row">
      <div class="lg:w-1/2 flex flex-col mb-8 lg:mb-0">
        <div class="relative aspect-video bg-gray-200 rounded-lg overflow-hidden flex-grow">
          <div class="absolute inset-0 flex items-center justify-center">
            <button class="btn btn-circle btn-lg tooltip flex items-center justify-center"
              data-tip="Video not available">
              <svg class="h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                  d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </button>
          </div>
        </div>
      </div>
      <div class="lg:w-1/2 lg:pl-8 flex flex-col justify-center">
        <div class="space-y-2 mb-4 font-medium text-lg">
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2 text-gray-100" fill="none" stroke="currentColor" viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            Contracting Officer or Contract Specialist Report
          </div>
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2 text-gray-100" fill="none" stroke="currentColor" viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            Contractor Responsibility Assessments
          </div>
          <div class="flex items-center">
            <svg class="w-5 h-5 mr-2 text-gray-100" fill="none" stroke="currentColor" viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            Supervisor Contracting Officer Report
          </div>
        </div>
        <p class="mb-6 font-medium">
          Simply send an email and you'll receive the information you need within minutes. Contact us to see
          how utilizing RPA can impact your day!
        </p>
        <app-connect-button></app-connect-button>
      </div>
    </div>
  </div>
</div>

<!-- Bottom slanted divider -->
<div class="relative h-16 transform rotate-180 mt-[-1px] md:mt-0">
  <svg class="absolute w-full h-16" preserveAspectRatio="none" viewBox="0 0 1440 48" fill="none"
    xmlns="http://www.w3.org/2000/svg">
    <path d="M0 48H1440V0L0 48Z" fill="#001b49" />
  </svg>
</div>"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\howitdone\howitdone.component.scss"--:{"content":".howitdone-container {
    position: relative;
    background-color: #f5f5f5;
    padding: 60px 0;
    width: 100%;
}

.content-wrapper {
    display: flex;
    justify-content: space-between;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}

.text-content {
    flex: 1;
    padding-right: 40px;
}

h2 {
    font-size: 2.5em;
    margin-bottom: 20px;

    .highlight {
        color: #4891ce;
    }
}

ul {
    list-style-type: none;
    padding: 0;

    li {
        margin-bottom: 15px;
        padding-left: 30px;
        position: relative;

        &:before {
            content: '✓';
            position: absolute;
            left: 0;
            color: #4891ce;
        }
    }
}

.connect-button {
    background-color: #4891ce;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    margin-top: 20px;
}

.image-carousel {
    flex: 1;
    max-width: 500px;
}

.elementor-shape {
    position: absolute;
    left: 0;
    width: 100%;
    line-height: 0;
    direction: ltr;

    &-top {
        top: -1px;
    }

    &-bottom {
        bottom: -1px;
        transform: rotate(180deg);
    }
}

.elementor-shape-fill {
    fill: #ffffff;
}"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\howitdone\howitdone.component.spec.ts"--:{"content":"import { ComponentFixture, TestBed } from '@angular/core/testing';

import { HowitdoneComponent } from './howitdone.component';

describe('HowitdoneComponent', () => {
  let component: HowitdoneComponent;
  let fixture: ComponentFixture<HowitdoneComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [HowitdoneComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(HowitdoneComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\howitdone\howitdone.component.ts"--:{"content":"import { NgFor } from '@angular/common';
import { Component, ElementRef, HostBinding, ViewChild } from '@angular/core';
import { ConnectButtonComponent } from "../shared/connect-button/connect-button.component";

@Component({
    selector: 'app-howitdone',
    standalone: true,
    templateUrl: './howitdone.component.html',
    styleUrls: ['./howitdone.component.scss'],
    imports: [NgFor, ConnectButtonComponent]
})
export class HowitdoneComponent {
  @HostBinding('class') hostClass = 'w-full';
  @ViewChild('carousel') carouselElement!: ElementRef;
  slides = [
    { image: 'images/chart1.png', alt: 'Chart 1' },
    { image: 'images/chart2.png', alt: 'Chart 2' },
    { image: 'images/chart3.png', alt: 'Chart 3' },
    { image: 'images/chart4.png', alt: 'Chart 4' }
  ];
  currentSlide = 0;

  ngAfterViewInit() {
    this.setupCarouselObserver();
  }

  setupCarouselObserver() {
    // Get the carousel element from the ViewChild reference
    const carousel = this.carouselElement.nativeElement;

    // Create a new IntersectionObserver
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          // If the slide is intersecting (visible)
          if (entry.isIntersecting) {
            // Update the currentSlide to the index of the intersecting slide
            this.currentSlide = Array.from(carousel.children).indexOf(entry.target);
          }
        });
      },
      { root: carousel, threshold: 0.5 } // Options: observe within carousel, trigger at 50% visibility
    );

    // Observe each slide in the carousel
    Array.from(carousel.children).forEach((slide) => {
      if (slide instanceof Element) {
        observer.observe(slide);
      }
    });
  }

  prevSlide() {
    const carousel = this.carouselElement.nativeElement;
    carousel.scrollLeft -= carousel.offsetWidth;
  }

  nextSlide() {
    const carousel = this.carouselElement.nativeElement;
    carousel.scrollLeft += carousel.offsetWidth;
  }
}"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\shared\connect-button\connect-button.component.html"--:{"content":"<button [ngClass]="buttonClasses" (click)="onClick()">
    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
            d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4">
        </path>
    </svg>
    {{ text }}
</button>"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\shared\connect-button\connect-button.component.scss"--:{"content":""}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\shared\connect-button\connect-button.component.spec.ts"--:{"content":"import { ComponentFixture, TestBed } from '@angular/core/testing';

import { ConnectButtonComponent } from './connect-button.component';

describe('ConnectButtonComponent', () => {
  let component: ConnectButtonComponent;
  let fixture: ComponentFixture<ConnectButtonComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [ConnectButtonComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(ConnectButtonComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\shared\connect-button\connect-button.component.ts"--:{"content":"import { Component, Input, Output, EventEmitter } from '@angular/core';
import { CommonModule } from '@angular/common';

@Component({
  selector: 'app-connect-button',
  templateUrl: './connect-button.component.html',
  styleUrls: ['./connect-button.component.scss'],
  standalone: true,
  imports: [CommonModule]
})
export class ConnectButtonComponent {
  @Input() text: string = 'Connect with us';
  @Input() additionalClasses: string = '';
  @Output() clicked = new EventEmitter<void>();

  onClick() {
    this.clicked.emit();
  }

  get buttonClasses(): string {
    return `btn btn-lg bg-[#3287cd] hover:bg-[#519edd] text-gray-100 rounded-full ${this.additionalClasses}`;
  }
}"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\team\team.component.html"--:{"content":"<p>team works!</p>
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\team\team.component.scss"--:{"content":""}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\team\team.component.spec.ts"--:{"content":"import { ComponentFixture, TestBed } from '@angular/core/testing';

import { TeamComponent } from './team.component';

describe('TeamComponent', () => {
  let component: TeamComponent;
  let fixture: ComponentFixture<TeamComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [TeamComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(TeamComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\team\team.component.ts"--:{"content":"import { Component } from '@angular/core';

@Component({
  selector: 'app-team',
  standalone: true,
  imports: [],
  templateUrl: './team.component.html',
  styleUrl: './team.component.scss'
})
export class TeamComponent {

}
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\testimonials\testimonials.component.html"--:{"content":"<p>testimonials works!</p>
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\testimonials\testimonials.component.scss"--:{"content":""}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\testimonials\testimonials.component.spec.ts"--:{"content":"import { ComponentFixture, TestBed } from '@angular/core/testing';

import { TestimonialsComponent } from './testimonials.component';

describe('TestimonialsComponent', () => {
  let component: TestimonialsComponent;
  let fixture: ComponentFixture<TestimonialsComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      imports: [TestimonialsComponent]
    })
    .compileComponents();

    fixture = TestBed.createComponent(TestimonialsComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
"}

,
--NEWFILE "C:\Users\Jake\Documents\potomacwave-angular-v1\potomacwave-angular-v1\src\app\testimonials\testimonials.component.ts"--:{"content":"import { Component } from '@angular/core';

@Component({
  selector: 'app-testimonials',
  standalone: true,
  imports: [],
  templateUrl: './testimonials.component.html',
  styleUrl: './testimonials.component.scss'
})
export class TestimonialsComponent {

}
"}

